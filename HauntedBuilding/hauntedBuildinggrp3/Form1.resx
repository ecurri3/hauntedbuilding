<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="doorRadio.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B//4AA///gAf//+AH////7//
</value>
  </data>
</root>